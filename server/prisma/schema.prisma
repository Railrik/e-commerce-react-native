generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String?
  published Boolean  @default(false)
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  userId Int     @unique
  user   User    @relation(fields: [userId], references: [id])
}

model Course {
  id           Int          @id @default(autoincrement())
  title        String
  description  String?
  image        String
  price        Float
  selected     Boolean
  instructorId Int
  instructor   User         @relation(fields: [instructorId], references: [id])
  userCourses  UserCourse[]
  cartItems    CartItem[]
  createdAt    DateTime     @default(now())
}

model UserCourse {
  id           Int      @id @default(autoincrement())
  user         User     @relation(fields: [userId], references: [id])
  userId       Int
  course       Course   @relation(fields: [courseId], references: [id])
  courseId     Int
  price        Float
  purchaseDate DateTime @default(now())
}

model Cart {
  id        Int        @id @default(autoincrement())
  userId    Int        @unique
  user      User       @relation(fields: [userId], references: [id])
  cartItems CartItem[]
  createdAt DateTime   @default(now())
}

model CartItem {
  id          Int      @id @default(autoincrement())
  courseId    Int
  course      Course   @relation(fields: [courseId], references: [id])
  quantity    Int
  cartId      Int
  cart        Cart     @relation(fields: [cartId], references: [id])
  coursePrice Float
  createdAt   DateTime @default(now())
}

model User {
  id          Int          @id @default(autoincrement())
  email       String       @unique
  name        String?
  posts       Post[]
  profile     Profile?
  courses     Course[]
  userCourses UserCourse[]
  cart        Cart?
  createdAt   DateTime     @default(now())
}
